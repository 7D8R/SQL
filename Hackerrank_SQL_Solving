1.Weather Observation Station 1

Query a list of CITY and STATE from the STATION table.

Solution:

SELECT CITY,STATE
FROM STATION;

2.Weather Observation Station 2

Query the following two values from the STATION table:

The sum of all values in LAT_N rounded to a scale of 2 decimal places.
The sum of all values in LONG_W rounded to a scale of 2 decimal places.

Solution:

SELECT ROUND(SUM(LAT_N),2),ROUND(SUM(LONG_W),2) 
FROM STATION;

3.Weather Observation Station 3

Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.

Solution:

SELECT DISTINCT CITY
FROM STATION
WHERE MOD(ID,2)=0;

4.Weather Observation Station 4

Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.

Solution:

SELECT (COUNT(CITY) - COUNT(DISTINCT CITY))
FROM STATION;

5.Weather Observation Station 5

Find the names of the customer that are not referred by the customer with id = 2.

Return the result table in any order.

Solution:

SELECT CITY C, LENGTH(CITY) L
FROM STATION
ORDER BY L DESC, C ASC 
LIMIT 1;
SELECT CITY C, LENGTH(CITY) L 
FROM STATION
ORDER BY L ASC, C ASC 
LIMIT 1;

6.Weather Observation Station 6

Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

Solution:
SELECT DISTINCT CITY
FROM STATION
WHERE CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%';

7.Weather Observation Station 7

Query the list of CITY names ending with vowels (a, e, Weather Observation Station 9
i, o, u) from STATION. Your result cannot contain duplicates.

Solution:

SELECT DISTINCT CITY
FROM STATION
WHERE CITY LIKE '%A' OR CITY LIKE '%E' OR CITY LIKE '%I' OR CITY LIKE '%O' OR CITY LIKE '%U';

8.Weather Observation Station 8

Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

Solution:

SELECT DISTINCT CITY
FROM STATION
WHERE (CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%') AND (CITY LIKE '%A' OR CITY LIKE '%E' OR CITY LIKE '%I' OR CITY LIKE '%O' OR CITY LIKE '%U' ) ;

9.Weather Observation Station 9

Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

Solution:

SELECT DISTINCT CITY
FROM STATION 
WHERE NOT (CITY  LIKE 'A%' OR CITY  LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%');

10.Weather Observation Station 10

Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

Solution:

SELECT DISTINCT CITY
FROM STATION
WHERE NOT(CITY LIKE '%A' OR CITY LIKE '%E' OR CITY LIKE '%I' OR CITY LIKE '%O' OR CITY LIKE '%U');

11.Weather Observation Station 11

Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

Solution:

SELECT DISTINCT CITY
FROM STATION 
WHERE NOT((CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%' )AND(CITY LIKE '%A' OR CITY LIKE '%E' OR CITY LIKE '%I' OR CITY LIKE '%O' OR CITY LIKE '%U'));

12.Weather Observation Station 12

Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

Solution:

SELECT DISTINCT CITY
FROM STATION 
WHERE NOT((CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%' )OR(CITY LIKE '%A' OR CITY LIKE '%E' OR CITY LIKE '%I' OR CITY LIKE '%O' OR CITY LIKE '%U'));

13.Weather Observation Station 13

Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7780 and less than 137.2345 . Truncate your answer to 4 decimal places.

Solution:

SELECT ROUND(SUM(LAT_N),4)
FROM STATION
WHERE LAT_N> 38.7880 AND LAT_N<137.2345;

14.Weather Observation Station 14

Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345 . Truncate your answer to 4 decimal places.

Solution:

SELECT ROUND(MAX(LAT_N),4)
FROM STATION
WHERE LAT_N<137.2345;

15.





